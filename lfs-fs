#!/bin/bash

# Linux From Scratch - From Scratch

# TODO: get the musl kernel headers from arch
# TODO: make the toybox init script smaller
# TODO: get internet access working
# TODO: automate the trick of stealing bash and its deps via recursive ldd
# TODO: get pacman-static installed on lfs-fs
# TODO: find a project that builds a minimal kernel config with no modules

# TODO: when we install sudo, mention that the official sudo logo is a fucking sandwich
# https://www.sudo.ws

# your patchelf-frankenstein work may prove useful,
# now that we know the nix founder wrote patchelf!

export PREFIX="$PWD/prefix"

# Get a C library
git clone https://git.musl-libc.org/git/musl
pushd musl
./configure --prefix="$PREFIX" --disable-shared
make -j
make install
popd

# Get the kernel headers for musl libc
# The github url below is where Arch gets them from
# https://archlinux.org/packages/extra/x86_64/kernel-headers-musl
git clone https://github.com/sabotage-linux/kernel-headers
pushd kernel-headers
make ARCH=x86_64 prefix="/" DESTDIR="$PREFIX" install
popd

export PATH="$PREFIX/bin:$PATH"

# Get some coreutils
git clone https://github.com/landley/toybox
pushd toybox
make defconfig
sed -i 's/# CONFIG_SH is not set/CONFIG_SH=y/' .config
CC=musl-gcc LDFLAGS=-static make
make install
popd

# Install init
cp -v init "$PREFIX/"

# Install pacman-static
cp -v pacman "$PREFIX/bin"

# Remove the bash symlink that comes with toybox sh
rm prefix/bin/bash

./ldds /bin/bash | while read path; do
    sudo install -Dv "$path" "prefix$path"
done

# kernel
# TODO: build the kernel here from a minimal config
sudo install -D /boot/vmlinuz2 prefix/boot/vmlinuz2

# resolv.conf
echo "nameserver 8.8.8.8" > prefix/etc/resolv.conf

# passwd
cat > prefix/etc/passwd << 'EOF' &&
root:x:0:0:root:/root:/bin/sh
guest:x:500:500:guest:/home/guest:/bin/sh
nobody:x:65534:65534:nobody:/proc/self:/dev/null
EOF

# Mount as install
partition="/dev/nvme1n1p7"
mountpoint="/mnt"
sudo mount "$partition" "$mountpoint"
sudo rsync -av --delete prefix/ "$mountpoint/"
sudo chroot "$mountpoint" /bin/sh
