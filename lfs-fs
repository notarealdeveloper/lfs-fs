#!/bin/bash

# Linux From Scratch - From Scratch

# TODO: get internet access working
# TODO: find a project that builds a minimal kernel config with no modules

# TODO: when we install sudo, mention that the official sudo logo is a fucking sandwich
# https://www.sudo.ws

# your patchelf-frankenstein work may prove useful,
# now that we know the nix founder wrote patchelf!

partition="/dev/nvme1n1p7"
mountpoint="/mnt"
sudo mount "$partition" "$mountpoint"

export PREFIX="$mountpoint"

# Get a C library
git clone https://git.musl-libc.org/git/musl
pushd musl
./configure --prefix="$PREFIX" --disable-shared
make -j
make install
popd

# get the kernel headers for musl libc
# https://archlinux.org/packages/extra/x86_64/kernel-headers-musl
git clone https://github.com/sabotage-linux/kernel-headers
pushd kernel-headers
make ARCH=x86_64 prefix="/" DESTDIR="$PREFIX" install
popd

export PATH="$PREFIX/bin:$PATH"

# get some coreutils
git clone https://github.com/landley/toybox
pushd toybox
make defconfig
sed -i 's/# CONFIG_SH is not set/CONFIG_SH=y/' .config
CC=musl-gcc LDFLAGS=-static make
make install
popd

# make a filesystem
mkdir -pv "$mountpoint"/{etc,{usr/,}lib{,64},dev{,/pts,/shm},proc,sys}
chmod +t "$mountpoint"/dev/shm

# init
cp -v init "$mountpoint/"

# etc/profile
cp -v etc/profile "$mountpoint"/etc/profile

# etc/resolv.conf
echo "nameserver 8.8.8.8" > $mountpoint/etc/resolv.conf

# etc/passwd
cat > $mountpoint/etc/passwd << 'EOF'
root:x:0:0:root:/root:/bin/sh
guest:x:500:500:guest:/home/guest:/bin/sh
nobody:x:65534:65534:nobody:/proc/self:/dev/null
EOF

# install pacman-static
cp -v pacman "$mountpoint/bin"

# remove the bash symlink that comes with toybox sh
rm -v "$mountpoint"/bin/bash

# install host bash and everything it links against
./ldds /bin/bash | while read path; do
    install -Dv "$path" "$mountpoint$path"
done

# kernel
install -Dv /boot/vmlinuz2 $mountpoint/boot/vmlinuz2

